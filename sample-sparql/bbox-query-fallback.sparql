PREFIX geo: <http://www.opengis.net/ont/geosparql#>
PREFIX geof: <http://www.opengis.net/def/function/geosparql/>
PREFIX mlit: <http://example.org/mlit/ontology#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

# ===============================================================
# 汎用的なBBOXフィルタクエリ（RDF4J GeoSPARQL関数使用）
# ===============================================================
# パラメータ化可能な地理的範囲フィルタ

SELECT ?mesh ?meshId ?adminCode ?population2025 ?elderly65Plus ?elderly75Plus
       ?buildingArea ?forestArea ?waterBodyArea ?wkt
WHERE {
  # メッシュの基本情報
  ?mesh rdf:type mlit:Mesh ;
        mlit:meshId ?meshId ;
        geo:hasGeometry ?geometry .
  
  ?geometry geo:asWKT ?wkt .
  
  # 汎用的なBBOXとの交差判定（RDF4J GeoSPARQL準拠）
  # 任意の地理的範囲に変更可能なパラメータ化設計
  FILTER(geof:sfIntersects(?wkt, "<http://www.opengis.net/def/crs/OGC/1.3/CRS84> POLYGON((136.0 36.1, 137.4 36.1, 137.4 37.6, 136.0 37.6, 136.0 36.1))"^^geo:wktLiteral))
  
  # 代替手法1: sfWithin を使用した完全包含チェック
  # FILTER(geof:sfWithin(?wkt, "<http://www.opengis.net/def/crs/OGC/1.3/CRS84> POLYGON((136.0 36.1, 137.4 36.1, 137.4 37.6, 136.0 37.6, 136.0 36.1))"^^geo:wktLiteral))
  
  # 代替手法2: sfOverlaps を使用した重複チェック  
  # FILTER(geof:sfOverlaps(?wkt, "<http://www.opengis.net/def/crs/OGC/1.3/CRS84> POLYGON((136.0 36.1, 137.4 36.1, 137.4 37.6, 136.0 37.6, 136.0 36.1))"^^geo:wktLiteral))
  
  # 行政コードフィルタ（任意の地域コードに変更可能）
  OPTIONAL { 
    ?mesh mlit:administrativeCode ?adminCode .
    # 特定地域のみに限定する場合のフィルタ（必要に応じてコメントアウト）
    # FILTER(REGEX(?adminCode, "^17"))  # 石川県の例
  }
  
  # 2025年人口データ（最適化済み）
  OPTIONAL {
    ?mesh mlit:hasPopulationData ?popSnapshot .
    ?popSnapshot mlit:populationYear 2025 ;
                 mlit:totalPopulation ?population2025 ;
                 mlit:ageCategory65Plus ?elderly65Plus ;
                 mlit:ageCategory75plus ?elderly75Plus .
  }
  
  # 土地利用データ（直接プロパティ）
  OPTIONAL { ?mesh mlit:buildingLandArea ?buildingArea . }
  OPTIONAL { ?mesh mlit:forestArea ?forestArea . }
  OPTIONAL { ?mesh mlit:waterBodyArea ?waterBodyArea . }
  
  # データの存在チェック
  FILTER(BOUND(?population2025) || BOUND(?buildingArea) || BOUND(?forestArea) || BOUND(?waterBodyArea))
}
ORDER BY ?meshId
LIMIT 200

# 汎用設計の特徴:
# 1. 標準的なRDF4J GeoSPARQL関数を使用
# 2. BBOX座標を変更するだけで任意地域に対応
# 3. 複数の空間関数（sfIntersects, sfWithin, sfOverlaps）をサポート
# 4. 行政コードフィルタも汎用的に設計
# 5. 最適化済みデータ構造を活用